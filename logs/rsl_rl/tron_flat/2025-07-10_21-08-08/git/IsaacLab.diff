--- git status ---
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   scripts/tutorials/00_sim/create_empty.py
	modified:   scripts/tutorials/00_sim/spawn_prims.py
	modified:   source/isaaclab_assets/isaaclab_assets/robots/__init__.py
	modified:   source/isaaclab_rl/isaaclab_rl/rsl_rl/rl_cfg.py
	modified:   source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/g1/rough_env_cfg.py
	modified:   source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	assets/
	source/isaaclab_assets/isaaclab_assets/robots/limx.py
	source/isaaclab_assets/robots/
	source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/agents/
	source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/rough_env_cfg.py
	source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/tron/

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/scripts/tutorials/00_sim/create_empty.py b/scripts/tutorials/00_sim/create_empty.py
index f35a0d5487..9f59fedfd0 100644
--- a/scripts/tutorials/00_sim/create_empty.py
+++ b/scripts/tutorials/00_sim/create_empty.py
@@ -41,7 +41,7 @@ def main():
     sim_cfg = SimulationCfg(dt=0.01)
     sim = SimulationContext(sim_cfg)
     # Set main camera
-    sim.set_camera_view([2.5, 2.5, 2.5], [0.0, 0.0, 0.0])
+    sim.set_camera_view([0, 0, 2.5], [0.0, 0.0, 0.0])
 
     # Play the simulator
     sim.reset()
diff --git a/scripts/tutorials/00_sim/spawn_prims.py b/scripts/tutorials/00_sim/spawn_prims.py
index 673e90f970..23197a5435 100644
--- a/scripts/tutorials/00_sim/spawn_prims.py
+++ b/scripts/tutorials/00_sim/spawn_prims.py
@@ -57,12 +57,15 @@ def design_scene():
         radius=0.15,
         height=0.5,
         visual_material=sim_utils.PreviewSurfaceCfg(diffuse_color=(1.0, 0.0, 0.0)),
+        physics_material=sim_utils.DeformableBodyMaterialCfg(),
     )
     cfg_cone.func("/World/Objects/Cone1", cfg_cone, translation=(-1.0, 1.0, 1.0))
     cfg_cone.func("/World/Objects/Cone2", cfg_cone, translation=(-1.0, -1.0, 1.0))
 
     # spawn a green cone with colliders and rigid body
-    cfg_cone_rigid = sim_utils.ConeCfg(
+    
+    """ 
+      cfg_cone_rigid = sim_utils.ConeCfg(
         radius=0.15,
         height=0.5,
         rigid_props=sim_utils.RigidBodyPropertiesCfg(),
@@ -72,7 +75,8 @@ def design_scene():
     )
     cfg_cone_rigid.func(
         "/World/Objects/ConeRigid", cfg_cone_rigid, translation=(-0.2, 0.0, 2.0), orientation=(0.5, 0.0, 0.5, 0.0)
-    )
+    ) 
+    """
 
     # spawn a blue cuboid with deformable body
     cfg_cuboid_deformable = sim_utils.MeshCuboidCfg(
@@ -105,11 +109,15 @@ def main():
     # Now we are ready!
     print("[INFO]: Setup complete...")
 
-    # Simulate physics
+
     while simulation_app.is_running():
-        # perform step
         sim.step()
 
+    # Simulate physics
+    #while simulation_app.is_running():
+        # perform step
+        # sim.step()
+
 
 if __name__ == "__main__":
     # run the main function
diff --git a/source/isaaclab_assets/isaaclab_assets/robots/__init__.py b/source/isaaclab_assets/isaaclab_assets/robots/__init__.py
index a451515608..4e73da6f10 100644
--- a/source/isaaclab_assets/isaaclab_assets/robots/__init__.py
+++ b/source/isaaclab_assets/isaaclab_assets/robots/__init__.py
@@ -24,3 +24,4 @@ from .shadow_hand import *
 from .spot import *
 from .unitree import *
 from .universal_robots import *
+from .limx import *    
diff --git a/source/isaaclab_rl/isaaclab_rl/rsl_rl/rl_cfg.py b/source/isaaclab_rl/isaaclab_rl/rsl_rl/rl_cfg.py
index 81a00b1e7a..b8744d78ff 100644
--- a/source/isaaclab_rl/isaaclab_rl/rsl_rl/rl_cfg.py
+++ b/source/isaaclab_rl/isaaclab_rl/rsl_rl/rl_cfg.py
@@ -174,7 +174,7 @@ class RslRlOnPolicyRunnerCfg:
     ``{time-stamp}_{run_name}``.
     """
 
-    logger: Literal["tensorboard", "neptune", "wandb"] = "tensorboard"
+    logger: Literal["tensorboard", "neptune", "wandb"] = "wandb"
     """The logger to use. Default is tensorboard."""
 
     neptune_project: str = "isaaclab"
diff --git a/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/g1/rough_env_cfg.py b/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/g1/rough_env_cfg.py
index 5023ecc4dc..7aad6887dd 100644
--- a/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/g1/rough_env_cfg.py
+++ b/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/g1/rough_env_cfg.py
@@ -143,8 +143,8 @@ class G1RoughEnvCfg(LocomotionVelocityRoughEnvCfg):
         )
 
         # Commands
-        self.commands.base_velocity.ranges.lin_vel_x = (0.0, 1.0)
-        self.commands.base_velocity.ranges.lin_vel_y = (-0.0, 0.0)
+        self.commands.base_velocity.ranges.lin_vel_x = (-1.0, 1.0)
+        self.commands.base_velocity.ranges.lin_vel_y = (-0.2, 0.2)
         self.commands.base_velocity.ranges.ang_vel_z = (-1.0, 1.0)
 
         # terminations
diff --git a/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py b/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
index c234e39750..70ca98ca54 100644
--- a/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
+++ b/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
@@ -233,7 +233,7 @@ class RewardsCfg:
 
     # -- task
     track_lin_vel_xy_exp = RewTerm(
-        func=mdp.track_lin_vel_xy_exp, weight=1.0, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
+        func=mdp.track_lin_vel_xy_exp, weight=3.0, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
     )
     track_ang_vel_z_exp = RewTerm(
         func=mdp.track_ang_vel_z_exp, weight=0.5, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
@@ -246,7 +246,7 @@ class RewardsCfg:
     action_rate_l2 = RewTerm(func=mdp.action_rate_l2, weight=-0.01)
     feet_air_time = RewTerm(
         func=mdp.feet_air_time,
-        weight=0.125,
+        weight=-0.125,      #added minus here as I think it should be a penalty
         params={
             "sensor_cfg": SceneEntityCfg("contact_forces", body_names=".*FOOT"),
             "command_name": "base_velocity",
@@ -272,6 +272,11 @@ class TerminationsCfg:
         func=mdp.illegal_contact,
         params={"sensor_cfg": SceneEntityCfg("contact_forces", body_names="base"), "threshold": 1.0},
     )
+    root_hight_below_minimum = DoneTerm(
+        func=mdp.root_height_below_minimum,
+        params={"asset_cfg": SceneEntityCfg("robot"), "minimum_height": 0.4}
+    )
+
 
 
 @configclass